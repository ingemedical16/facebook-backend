swagger: '2.0'
info:
  title: User Authentication API
  version: 1.0.0
  description: API for user authentication, including login functionality.
paths:
  /api/auth/login:
    post:
      summary: User login
      description: Authenticates a user and generates an access token if the credentials are valid.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Missing or invalid required fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid email or password.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Email not verified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: The user's email address.
          example: user@example.com
        password:
          type: string
          description: The user's password.
          example: password123
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        code:
          type: string
          example: LOGIN_SUCCESS
        message:
          type: string
          example: Login successful.
        data:
          type: object
          properties:
            token:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            user:
              type: object
              properties:
                id:
                  type: string
                  example: 648f72ec3e29c9e2548d9a3f
                username:
                  type: string
                  example: johndoe
                picture:
                  type: string
                  example: https://example.com/avatar.jpg
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                verified:
                  type: boolean
                  example: true

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        code:
          type: string
          example: INVALID_CREDENTIALS
        message:
          type: string
          example: Invalid email or password.
