swagger: '2.0'
info:
  title: User Search  API
  version: 1.0.0
  description: API documentation for searching users 
paths:
  /api/users//search/{searchTerm}:
   post:
      summary: Search for users
      description: Perform a search query on various fields of user profiles using a case-insensitive match.
      tags:
        - Users
      parameters:
        - name: searchTerm
          in: path
          required: true
          description: The term to search across user profiles.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Search completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  code:
                    type: string
                    example: "SEARCH_RESULTS"
                  message:
                    type: string
                    example: "Search completed successfully."
                  data:
                    type: object
                    properties:
                      searchResult:
                        type: array
                        items:
                          type: object
                          properties:
                            first_name:
                              type: string
                              example: "John"
                            last_name:
                              type: string
                              example: "Doe"
                            username:
                              type: string
                              example: "johndoe"
                            picture:
                              type: string
                              example: "https://example.com/john.jpg"
        400:
          description: Search term is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  code:
                    type: string
                    example: "SEARCH_TERM_REQUIRED"
                  message:
                    type: string
                    example: "Search term is required."
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  code:
                    type: string
                    example: "SERVER_ERROR"
                  message:
                    type: string
                    example: "An unexpected error occurred. Please try again later."
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT