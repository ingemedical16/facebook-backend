swagger: '2.0'
info:
  title: "Delete Friend Request Route"
  version: 1.0.0
  description: "API endpoint for deleting a friend request."
paths:
  /api/users/deleteRequest/{id}:
    put:
      summary: Delete a friend request
      description: Allows the authenticated user to delete a pending friend request sent to another user.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user whose friend request will be deleted.
          schema:
            type: string
            example: 60d0fe4f5311236168a109d8
      responses:
        200:
          description: Successfully deleted the friend request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: string
                    example: REQUEST_DELETED
                  message:
                    type: string
                    example: Request successfully deleted.
        400:
          description: Invalid action (trying to delete a request from yourself) or request not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: string
                    example: INVALID_ACTION
                  message:
                    type: string
                    example: You can't delete a request from yourself.
        404:
          description: User not found or the request does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: string
                    example: USER_NOT_FOUND
                  message:
                    type: string
                    example: User not found.
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: string
                    example: SERVER_ERROR
                  message:
                    type: string
                    example: An unexpected error occurred. Please try again later.
